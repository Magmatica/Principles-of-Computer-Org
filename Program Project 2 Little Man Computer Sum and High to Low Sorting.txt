Programming Project #2

This is the second of 3 programs that will be written for this class. 

This program #2, you are required to develop a program that takes a numeric input (4 digits) (0 to 99).
Such as 45 67 23 89 for example. The program will add the 4 numbers and output the sum. (244). it will then out the numbers
Sorted high to low 89 67 45 23.
You will use the LMC (Little Man Computer) for this program. 
You can have a infinite loop or a stop input

The examples in the LMC simulator may help.

CODE GOES DOWN HERE!!!
 
        
        INP             // Starts with receiving user input
        STA TEMP_1      // Stores the given value into memory address TEMP_1
        ADD TOTAL       // Adds to the variable total
        STA TOTAL       // Stores the given value into memory address TOTAL
        INP             // Starts with receiving user input
        STA TEMP_2      // Stores the given value into memory address TEMP_2
        ADD TOTAL       // Adds to the variable total
        STA TOTAL       // Stores the given value into memory address TOTAL
        INP             // Starts with receiving user input
        STA TEMP_3      // Stores the given value into memory address TEMP_3
        ADD TOTAL       // Adds to the variable total
        STA TOTAL       // Stores the given value into memory address TOTAL
        INP             // Starts with receiving user input
        STA TEMP_4      // Stores the given value into memory address TEMP_4
        ADD TOTAL       // Adds to the variable total
        OUT TOTAL	      // Outputs the total sum
BEGIN   LDA ZERO	      // Starts the loop
        STA FLAG	      // Stores at FLAG
        LDA TEMP_2	    // Loads TEMP_2
        SUB TEMP_1	    // Subtracts TEMP_1
        BRA TWOBIG	    // Go to TWOBIG
        LDA ONE         // Loads ONE
        STA FLAG        // Stores at FLAG
        LDA TEMP_1      // Loads TEMP_1
        STA TEMP_5      // Stores at TEMP_5
        LDA TEMP_2      // Loads TEMP_2
        STA TEMP_1      // Stores at TEMP_1
        LDA TEMP_5      // Loads TEMP_5
        STA TEMP_2      // Stores at TEMP_2
TWOBIG 	LDA TEMP_3      // Loads TEMP_3
        SUB TEMP_2      // Subtracts TEMP_2
        BRA THREEBIG    // Go to THREEBIG
        LDA ONE         // Loads ONE
        STA FLAG        // Stores at FLAG
        LDA TEMP_2      // Loads TEMP_2
        STA TEMP_5      // Stores at TEMP_5
        LDA TEMP_3      // Loads TEMP_3
        STA TEMP_2      // Stores at TEMP_2  
        LDA TEMP_5      // Loads TEMP_5
        STA TEMP_3      // Stores at TEMP_3
THREEBIG LDA TEMP_4     // Loads TEMP_4
        SUB TEMP_3      // Subtracts TEMP_3
        BRA FOURBIG     // Go to FOURBIG
        LDA ONE         // Loads ONE
        STA FLAG        // Stores at FLAG
        LDA TEMP_3      // Loads TEMP_3
        STA TEMP_5      // Stores at TEMP_5
        LDA TEMP_4      // Loads TEMP_4
        STA TEMP_3      // Stores at TEMP_3
        LDA TEMP_5      // Loads TEMP_5
        STA TEMP_4      // Stores at TEMP_4
FOURBIG LDA FLAG        // Loads FLAG
        BRZ FLAGZERO    // Go to FLAGZERO
        BRP BEGIN       // Go to BEGIN
FLAGZERO LDA TEMP_1     // Loads TEMP_1
        OUT             // Outputs the value
        LDA TEMP_2      // Loads TEMP_2
        OUT             // Outputs the value
        LDA TEMP_3      // Loads TEMP_3
        OUT             // Outputs the value
        LDA TEMP_4      // Loads TEMP_4
        OUT	            // Outputs the value
        HLT             // Halt the program
TEMP_1	DAT		          // Creates data field
TEMP_2	DAT		          // Creates data field
TEMP_3	DAT		          // Creates data field
TEMP_4	DAT		          // Creates data field
FLAG 	  DAT		          // Creates data field
TEMP_5 	DAT	000	        // Creates data field
ONE 	  DAT 001		      // Creates data field
ZERO 	  DAT 000		      // Creates data field
TOTAL	  DAT		          // Creates data field